name: AKS - Start Cluster (Morning)

on:
  schedule:
    # 8:01 Israel time = 6:01 UTC (during standard time) or 5:01 UTC (during DST)  
    # Using 5:01 UTC to cover DST (Day Saving Time)
    - cron: '1 5 * * 0-4'  # Sunday-Thursday only (skip Friday & Saturday)
  workflow_dispatch:  # Allow manual trigger

jobs:
  start-aks:
    runs-on: ubuntu-latest
    environment: Development  # Adjust to your environment
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up variables
        run: |
          echo "AKS_RG=dev-zionet-learning-2025" >> $GITHUB_ENV
          echo "AKS_NAME=aks-cluster-dev" >> $GITHUB_ENV

      - name: Check current time in Israel
        run: |
          ISRAEL_TIME=$(TZ='Asia/Jerusalem' date '+%Y-%m-%d %H:%M:%S %Z')
          echo "Current Israel time: $ISRAEL_TIME"
          DAY_OF_WEEK=$(TZ='Asia/Jerusalem' date '+%u')  # 1=Monday, 7=Sunday
          echo "Day of week: $DAY_OF_WEEK (1=Mon, 5=Fri, 6=Sat, 7=Sun)"

      - name: Start AKS cluster
        run: |
          echo "Starting AKS cluster: $AKS_NAME in resource group: $AKS_RG"
          az aks start --resource-group $AKS_RG --name $AKS_NAME
          echo "AKS cluster started successfully"

      - name: Wait for cluster to be ready
        run: |
          echo "Waiting for cluster to be fully ready..."
          for i in {1..20}; do
            STATUS=$(az aks show --resource-group $AKS_RG --name $AKS_NAME --query "powerState.code" -o tsv)
            if [[ "$STATUS" == "Running" ]]; then
              echo "Cluster is running and ready"
              break
            fi
            echo "Attempt $i: Cluster status is $STATUS, waiting 30s..."
            sleep 30
          done

      - name: Verify cluster status
        run: |
          STATUS=$(az aks show --resource-group $AKS_RG --name $AKS_NAME --query "powerState.code" -o tsv)
          echo "Final AKS cluster status: $STATUS"