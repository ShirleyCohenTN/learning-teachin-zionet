name: AKS - Terraform Apply with Provisioning

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  aks-terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write      # Required for OIDC login
      contents: read       # For actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Terraform working directory
        run: echo "TF_DIR=./devops/kubernetes/DemoCuest/terraform" >> $GITHUB_ENV

      - name: Debug ARM envs
        run: |
          env | grep ARM_
          env | grep AZURE_

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_DIR }}

      - name: Extract environment variables
        id: extract_env
        run: |
          if [ "${{ inputs.environment }}" == "Development" ]; then
            SHORT_ENV="dev"
          elif [ "${{ inputs.environment }}" == "Production" ]; then
            SHORT_ENV="prod"
          else
            echo "Unknown environment: ${{ inputs.environment }}"
            exit 1
          fi
          echo "short_env=$SHORT_ENV" >> $GITHUB_ENV
          
      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars.${{ env.short_env }}"
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="terraform.tfvars.${{ env.short_env }}"
        working-directory: ${{ env.TF_DIR }}