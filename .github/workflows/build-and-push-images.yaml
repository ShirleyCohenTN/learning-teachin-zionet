name: For Full CICD - Build and push images

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      list_services_names:
        description: "Optional comma-separated list of services to build (e.g., accessor,manager). Leave empty for all."
        required: false
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment name (e.g., Development)"
        required: true
        type: string
      environment_name:
        description: "environment_name passthrough"
        required: true
        type: string
      list_services_names:
        description: "Optional comma-separated list of services to build (e.g., accessor,manager). Leave empty for all."
        required: false
        type: string

jobs:
  build-and-push:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        service:
          - name: accessor
            context: backend/ContainerApp/Accessor
            dockerfile: backend/ContainerApp/Accessor/Dockerfile
          - name: manager
            context: backend/ContainerApp/Manager
            dockerfile: backend/ContainerApp/Manager/Dockerfile
          - name: engine
            context: backend/ContainerApp/Engine
            dockerfile: backend/ContainerApp/Engine/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare service filter
        id: filter
        shell: bash
        run: |
          raw="${{ inputs.list_services_names || github.event.inputs.list_services_names || '' }}"
          # remove spaces to make contains() reliable for CSV lists
          filter="${raw// /}"
          echo "filter=${filter}" >> "$GITHUB_OUTPUT"

      - name: Set short commit SHA
        id: vars
        shell: bash
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          echo "env_tag=${{ inputs.environment_name }}" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set image tag
        id: imgtag
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_call" ]]; then
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${{ steps.vars.outputs.short_sha }},${{ steps.vars.outputs.env_tag }}" >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ matrix.service.name }} image
        if: ${{ steps.filter.outputs.filter == '' || steps.filter.outputs.filter == 'all' || contains(format(',{0},', steps.filter.outputs.filter), format(',{0},', matrix.service.name)) }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service.name }}:${{ steps.imgtag.outputs.tag }}