name: For Full CICD - Build and push images

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      list_services_names:
        description: "Optional comma-separated list of services to build (e.g., accessor,manager). Leave empty for all."
        required: false
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment name (e.g., Development)"
        required: true
        type: string
      environment_name:
        description: "environment_name namespace/prefix (lowercase letters & digits)"
        required: true
        type: string
      list_services_names:
        description: "Optional comma-separated list of services to build (e.g., accessor,manager). Leave empty for all."
        required: false
        type: string

jobs:
  build-and-push:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        service:
          - name: accessor
            context: backend/ContainerApp/Accessor
            dockerfile: backend/ContainerApp/Accessor/Dockerfile
          - name: manager
            context: backend/ContainerApp/Manager
            dockerfile: backend/ContainerApp/Manager/Dockerfile
          - name: engine
            context: backend/ContainerApp/Engine
            dockerfile: backend/ContainerApp/Engine/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare service filter
        id: filter
        run: |
          raw="${{ inputs.list_services_names || github.event.inputs.list_services_names || '' }}"
          # remove spaces to make contains() reliable for CSV lists
          filter="${raw// /}"
          echo "filter=${filter}" >> "$GITHUB_OUTPUT"

      - name: Set short commit SHA
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          echo "env_tag=${{ inputs.environment_name }}" >> "$GITHUB_OUTPUT"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: teachindevacr.azurecr.io
          logout: true

      - name: Set image tag
        id: imgtag
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          IMAGE_NAME: teachindevacr.azurecr.io/${{ matrix.service.name }}
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_call" ]]; then
            echo "tags=${IMAGE_NAME}:latest" >> "$GITHUB_OUTPUT"
          else
            echo "tags=${IMAGE_NAME}:${{ steps.vars.outputs.short_sha }}" >> "$GITHUB_OUTPUT"
            echo "tags=${IMAGE_NAME}:${{ steps.vars.outputs.env_tag }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ steps.imgtag.outputs.tags }}