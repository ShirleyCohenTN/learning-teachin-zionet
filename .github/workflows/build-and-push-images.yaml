name: For Full CICD - Build and push images

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      list_services_names:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      list_services_names:
        required: false
        type: string

jobs:
  build-and-push:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        service:
          - name: accessor
            context: backend/ContainerApp/Accessor
            dockerfile: backend/ContainerApp/Accessor/Dockerfile
          - name: manager
            context: backend/ContainerApp/Manager
            dockerfile: backend/ContainerApp/Manager/Dockerfile
          - name: engine
            context: backend/ContainerApp/Engine
            dockerfile: backend/ContainerApp/Engine/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set ACR environment
        run: |
          ACR_NAME=teachindevacr
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=$ACR_NAME.azurecr.io" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: az acr login --name $ACR_NAME

      - name: Set image tags
        id: imgtag
        shell: bash
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          IMAGE_NAME=${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service.name }}
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_call" ]]; then
            echo "tags=${IMAGE_NAME}:latest" >> "$GITHUB_OUTPUT"
          else
            SHORT_SHA="${GITHUB_SHA::7}"
            ENV_TAG="${{ inputs.environment_name }}"
            {
              echo "tags<<EOF"
              echo "${IMAGE_NAME}:${SHORT_SHA}"
              echo "${IMAGE_NAME}:${ENV_TAG}"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ steps.imgtag.outputs.tags }}