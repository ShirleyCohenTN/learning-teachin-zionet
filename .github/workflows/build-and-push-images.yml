name: For Full CICD - Build and push images

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-and-push:
    environment: Development
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        service:
          - name: accessor
            context: backend/ContainerApp/Accessor
            dockerfile: backend/ContainerApp/Accessor/Dockerfile
          - name: manager
            context: backend/ContainerApp/Manager
            dockerfile: backend/ContainerApp/Manager/Dockerfile
          - name: engine
            context: backend/ContainerApp/Engine
            dockerfile: backend/ContainerApp/Engine/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure resource group and ACR exist
        run: |
          RG_NAME=dev-zionet-learning-2025
          LOCATION=westeurope
          ACR_NAME=aksdemocuest12345

          az group create --name $RG_NAME --location $LOCATION

          if ! az acr show --name $ACR_NAME --resource-group $RG_NAME &>/dev/null; then
            az acr create --resource-group $RG_NAME --name $ACR_NAME --sku Basic --location $LOCATION
          fi

          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: az acr login --name $ACR_NAME

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: $ACR_NAME.azurecr.io/${{ matrix.service.name }}:latest