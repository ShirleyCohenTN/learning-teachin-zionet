name: Deploy Frontend with Terraform

on:
  pull_request:
    branches:
      - main
 
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - apply
        - destroy
        - plan

env:
      ARM_USE_OIDC: "true" # tell provider to use the OIDC token
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_AZUREAD: "true" # matches `use_azuread_auth = true`

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      deployment_token: ${{ steps.terraform_output.outputs.deployment_token }}
      static_web_app_url: ${{ steps.terraform_output.outputs.static_web_app_url }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
         
      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Set Terraform working directory
        run: echo "TF_DIR=./devops/terraform-frontend" >> $GITHUB_ENV    

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Apply
        if: github.event.inputs.terraform_action == 'apply'
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Destroy
        if: github.event.inputs.terraform_action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_DIR }}

      - name: Get Terraform Outputs
        if: github.event.inputs.terraform_action == 'apply'
        id: terraform_output
        run: |
          echo "deployment_token=$(terraform output -raw deployment_token)" >> $GITHUB_OUTPUT
          echo "static_web_app_url=$(terraform output -raw static_web_app_url)" >> $GITHUB_OUTPUT
        working-directory: ${{ env.TF_DIR }}

  deploy:
    needs: terraform
    if: github.event.inputs.terraform_action == 'apply'
    uses: ./.github/workflows/deploy-frontend.yml
    permissions:
      id-token: write
      contents: read
    with:
      deployment_token: ${{ needs.terraform.outputs.deployment_token }}
    secrets: inherit
    
    
