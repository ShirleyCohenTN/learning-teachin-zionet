version: "3.9"

services:

  # -------------------- Azure SQL Edge --------------------
  sqledge:
    container_name: sqledge
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      ACCEPT_EULA: "${ACCEPT_EULA}"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
    ports:
      - "1433:1433"  # Optional: expose for local dev
    # volumes:
    #   - sqledge-data:/var/opt/mssql
    networks:
      - sb-emulator
    restart: unless-stopped

  # -------------------- Azure Service Bus Emulator --------------------
  servicebus-emulator:
    container_name: servicebus-emulator
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    pull_policy: always
    volumes:
       - ./servicebus-emulator:/ServiceBus_Emulator/ConfigFiles
    ports:
      - "5672:5672"
      - "5300:5300"
    environment:
      SQL_SERVER: sqledge
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
      ACCEPT_EULA: "${ACCEPT_EULA}"
    depends_on:
      - sqledge
    networks:
      sb-emulator:
        aliases:
          - sbemulatorns
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "nc -z localhost 5672"]
      interval: 5s
      timeout: 5s
      retries: 15


# ------------------------- PostgreSQL DB --------------------------
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres_db
    ports:
        - "5432:5432"
    volumes:
        - pgdata:/var/lib/postgresql/data
    networks:
        - microservice-net
 

  # ---------------------- pgAdmin for PostgreSQL ----------------------
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin
      ports:
        - "8080:80"
      networks:
        - microservice-net

  # ------------------------ Manager Service ---------------------------
  manager:
    build:
      context: ./Manager
    container_name: manager
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_URLS=http://+:5001
    depends_on:
      - servicebus-emulator
    networks:
      - microservice-net
      - sb-emulator

  manager-dapr:
    image: "daprio/daprd:latest"
    container_name: manager-dapr
    depends_on:
      manager:
        condition: service_started
    command: [
      "./daprd",
      "-app-id", "manager",
      "-app-port", "5001",
      "-placement-host-address", "placement:50006",
      "-dapr-http-port", "3500",
      "--resources-path", "/dapr/components",
      "-config", "/dapr/config.yaml"
    ]
    volumes:
      - ./dapr:/dapr
    network_mode: "service:manager"

  # ------------------------ Engine Service ---------------------------
  engine:
    build:
      context: ./Engine
    container_name: engine
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_URLS=http://+:5002
    depends_on:
      - servicebus-emulator
    networks:
      - microservice-net
      - sb-emulator

  engine-dapr:
    image: "daprio/daprd:latest"
    container_name: engine-dapr
    depends_on:
      engine:
        condition: service_started
    command: [
      "./daprd",
      "-app-id", "engine",
      "-app-port", "5002",
      "-placement-host-address", "placement:50006",
      "-dapr-http-port", "3501",
      "--resources-path", "/dapr/components",
      "-config", "/dapr/config.yaml"
    ]
    volumes:
      - ./dapr:/dapr
    network_mode: "service:engine"

  # ------------------------ Accessor Service ---------------------------
  accessor:
    build:
      context: ./Accessor
    container_name: accessor
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - DB_HOST=postgres-db
      - DB_PORT=5432
      - DB_NAME=appdb
      - DB_USER=postgres
      - DB_PASS=postgres
    depends_on:
      - servicebus-emulator
      - postgres
    networks:
      - microservice-net
      - sb-emulator

  accessor-dapr:
    image: "daprio/daprd:latest"
    container_name: accessor-dapr
    depends_on:
      accessor:
        condition: service_started
    command: [
      "./daprd",
      "-app-id", "accessor",
      "-app-port", "5003",
      "-placement-host-address", "placement:50006",
      "-dapr-http-port", "3502",
      "--resources-path", "/dapr/components",
      "-config", "/dapr/config.yaml"
    ]
    volumes:
      - ./dapr:/dapr
    network_mode: "service:accessor"


  # ------------------------- placement -----------------------------

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    container_name: placement
    networks:
      - microservice-net


# ------------------------ Shared Networks ---------------------------
networks:
  microservice-net:
    driver: bridge
  sb-emulator:
    driver: bridge

# ------------------------ Shared Volumes ---------------------------
volumes:
      pgdata:
      # sqledge-data:
