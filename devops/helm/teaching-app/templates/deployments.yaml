{{- range $name, $deployment := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deployment.name }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ $deployment.name }}
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $deployment.name }}
      release: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $deployment.name }}
        release: {{ $.Release.Name }}
      {{- if $.Values.dapr.enabled }}
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "{{ $deployment.dapr.appId }}"
        dapr.io/app-port: "{{ $deployment.dapr.appPort }}"
      {{- end }}
    spec:
      {{- if $.Values.serviceAccount.create }}
      serviceAccountName: {{ include "teaching-app.serviceAccountName" $ }}
      {{- end }}
      containers:
        - name: {{ $deployment.name }}
          image: "{{ $.Values.image.registry }}/{{ $deployment.image }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $deployment.port }}
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: {{ $deployment.env.ASPNETCORE_URLS }}
            {{- if eq $deployment.name "accessor" }}
            - name: ConnectionStrings__Postgres
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.externalSecrets.postgres.name }}
                  key: {{ $.Values.externalSecrets.postgres.key }}
            {{- end }}
          resources:
            {{- toYaml (index $.Values.resources $deployment.name) | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
