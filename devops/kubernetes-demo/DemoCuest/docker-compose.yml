services:
#############################################
# The API Gateway Service 
#############################################
  # apigateway:
  #   image: ${DOCKER_REGISTRY-}ocelot  
  #   container_name: apigateway-ocelot
  #   environment:
  #     - ASPNETCORE_URLS=http://+:80
  #   build:
  #     context: ApiGateway
  #     dockerfile: Dockerfile 
  #   ports:
  #     - "80:80"
  #   networks:
  #     - democuest-dapr  


#############################################
# Notification Manager Microservice + Dapr sidecars
#############################################
  notificationmanager:
    image: ${DOCKER_REGISTRY-}notificationmanager
    build:
      context: Managers/NotificationManager
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env  
    networks:
      - democuest-dapr
    ports:
      - "5072:8080"
    environment: 
      - ASPNETCORE_URLS=http://notificationmanager:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - AZURE__SignalR__ConnectionString=Endpoint=http://host.docker.internal:8888;Port=8888;AccessKey=ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGH;Version=1.0;
  notificationmanager-dapr:
    image: "daprio/daprd:1.13.5"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
     "-app-id", "notificationmanager",
     "-app-port", "8080",
     "-dapr-http-port", "3500",
     "-placement-host-address", "placement:50006",
     "--resources-path", "/dapr/components",
     "-config", "/dapr/config.yaml",
     "--log-level", "debug"]
    volumes:
        - "./dapr/:/dapr"
    depends_on:
      - notificationmanager
    network_mode: "service:notificationmanager"

#############################################
# Todo Manager Microservice + Dapr sidecars
#############################################
  todomanager:
    image: ${DOCKER_REGISTRY-}todomanager
    build:
      context: Managers/TodoManager
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - .env  
    networks:
      - democuest-dapr
    ports:
      - "5073:8080"
    environment: 
      - ASPNETCORE_URLS=http://todomanager:8080
      - ASPNETCORE_ENVIRONMENT=Development
  todomanager-dapr:
    image: "daprio/daprd:1.13.5"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
     "-app-id", "todomanager",
     "-app-port", "8080",
     "-dapr-http-port", "3500",
     "-placement-host-address", "placement:50006",
     "-resources-path", "/dapr/components",
     "-config", "/dapr/config.yaml"]
    volumes:
        - "./dapr/:/dapr"
    depends_on:
      - todomanager
    network_mode: "service:todomanager"

#############################################
# Todo Accessor Microservice + Dapr sidecars
#############################################
  todoaccessor:
    image: ${DOCKER_REGISTRY-}todoaccessor
    build:
      context: Accessors/TodoAccessor
      dockerfile: Dockerfile
    networks:
      - democuest-dapr
    env_file:
      - .env 
    ports:
      - "5075:8080" 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - mongodb
  todoaccessor-dapr:
    image: "daprio/daprd:1.13.5"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
     "-app-id", "todoaccessor",
     "-app-port", "8080",
     "-placement-host-address", "placement:50006",
     "-dapr-http-port", "3500",
     "-resources-path", "/dapr/components",
     "-config", "/dapr/config.yaml"]
    volumes:
        - "./dapr/:/dapr"
    depends_on:
      - todoaccessor
      - mongodb
    network_mode: "service:todoaccessor"

############################
# Redis state store
############################
  redis:
    image: "redis/redis-stack-server:latest"
    hostname: redisserver
    ports:
      - "6379:6379"
    networks:
      - democuest-dapr
    environment:
     - REDIS_REPLICATION_MODE=master

############################
# Dapr zipkin service
############################
  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"
    networks:
      - democuest-dapr

#############################
## Dapr placement service
#############################
  placement:
    image: "daprio/dapr:1.13.5"
    command: ["./placement", "-port", "50006", "--log-level", "debug"]
    ports:
      - "50006:50006"
    networks:
      - democuest-dapr

############################
# RabitMQ
############################
  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"

#   volumes:
#      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - democuest-dapr

############################
# MongoDB
############################
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    networks:
    - democuest-dapr
    volumes:
      - mongodb_data:/data/db  # Persistent volume for MongoDB data
      - mongodb_config:/data/configdb # Persistent volume for config data

############################
# SignalR emulator service
############################
  signalr:
    image: ${DOCKER_REGISTRY-}signalremulator
    build:
      context: .
      dockerfile: ./SignalREmulator/Dockerfile
    ports:
      - 8888:8888
      - 7071:7071 
    volumes:
     - ./workspace:/workspace
    environment:
      - ASRS_EMULATOR_PORT=8888
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8888;http://+:7071

volumes:
    mongodb_data:
    mongodb_config:


############################
# Global settings
############################
networks:
    democuest-dapr:
