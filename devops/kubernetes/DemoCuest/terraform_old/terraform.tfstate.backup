{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 39,
  "lineage": "4ed0cd14-e0aa-894a-310d-39c627154566",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "dapr",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "dapr",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "dapr",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.14.4",
                "chart": "dapr",
                "first_deployed": 1753171985,
                "last_deployed": 1753171985,
                "name": "dapr",
                "namespace": "dapr-system",
                "notes": "Thank you for installing Dapr: High-performance, lightweight serverless runtime for cloud and edge\n\nYour release is named dapr.\n\nTo get started with Dapr, we recommend using our quickstarts:\nhttps://github.com/dapr/quickstarts\n\nFor more information on running Dapr, visit:\nhttps://dapr.io\n\u003e Warning: The default storage size for the Scheduler is 1Gi, which may not be sufficient for production deployments.\n\u003e You may want to consider reinstalling Dapr with a larger Scheduler storage of at least 16Gi.\n\u003e\n\u003e --set dapr_scheduler.cluster.storageSize=16Gi --set dapr_scheduler.etcdSpaceQuota=16Gi\n\u003e\n\u003e For more information, see https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-persisting-scheduler\n",
                "revision": 1,
                "values": "{}",
                "version": "1.14.4"
              }
            ],
            "name": "dapr",
            "namespace": "dapr-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://dapr.github.io/helm-charts/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.14.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubectl_manifest.dapr_system_ns"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "all_manifests",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "cosmos-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/cosmosdb-emulator",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "a189e7dbece74bd12c3038ce7dd1c71afb4d0f24e31c5c019d47667c119e9069",
            "live_uid": "1e4c4aff-733b-4e90-939f-0427de0ff00a",
            "name": "cosmosdb-emulator",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1e4c4aff-733b-4e90-939f-0427de0ff00a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: cosmosdb-emulator\r\n  namespace: devops-model\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: cosmosdb-emulator\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: cosmosdb-emulator\r\n    spec:\r\n      containers:\r\n        - name: cosmosdb-emulator\r\n          image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator\r\n          ports:\r\n            - containerPort: 8081  # HTTPS port for emulator\r\n            - containerPort: 10250 # Emulator control (optional)\r\n          env:\r\n            - name: AZURE_COSMOS_EMULATOR_PARTITION_COUNT\r\n              value: \"3\"\r\n            - name: AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE\r\n              value: \"true\"\r\n            - name: AZURE_COSMOS_EMULATOR_ALLOW_NETWORK_ACCESS\r\n              value: \"true\"\r\n            - name: AZURE_COSMOS_EMULATOR_NOUI\r\n              value: \"true\"\r\n            - name: AZURE_COSMOS_EMULATOR_ENABLE_PREVIEW\r\n              value: \"true\"\r\n            - name: AZURE_COSMOS_EMULATOR_CERTIFICATE_POLICY\r\n              value: accept_certificate\r\n          volumeMounts:\r\n            - name: cosmosdata\r\n              mountPath: /tmp/cosmos/appdata\r\n      volumes:\r\n        - name: cosmosdata\r\n          emptyDir: {}\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cosmosdb-emulator\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cosmosdb-emulator\n  template:\n    metadata:\n      labels:\n        app: cosmosdb-emulator\n    spec:\n      containers:\n      - env:\n        - name: AZURE_COSMOS_EMULATOR_PARTITION_COUNT\n          value: \"3\"\n        - name: AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE\n          value: \"true\"\n        - name: AZURE_COSMOS_EMULATOR_ALLOW_NETWORK_ACCESS\n          value: \"true\"\n        - name: AZURE_COSMOS_EMULATOR_NOUI\n          value: \"true\"\n        - name: AZURE_COSMOS_EMULATOR_ENABLE_PREVIEW\n          value: \"true\"\n        - name: AZURE_COSMOS_EMULATOR_CERTIFICATE_POLICY\n          value: accept_certificate\n        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator\n        name: cosmosdb-emulator\n        ports:\n        - containerPort: 8081\n        - containerPort: 10250\n        volumeMounts:\n        - mountPath: /tmp/cosmos/appdata\n          name: cosmosdata\n      volumes:\n      - emptyDir: {}\n        name: cosmosdata\n",
            "yaml_incluster": "a189e7dbece74bd12c3038ce7dd1c71afb4d0f24e31c5c019d47667c119e9069"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "cosmos-secret.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/secrets/cosmosdb-secret",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "0caef4b08752b209ca1f17d2d0a45f9c4d55f82a21e640a386768e040b1b3a44",
            "live_uid": "588b38ea-1b95-43a6-9740-7b529336b142",
            "name": "cosmosdb-secret",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "588b38ea-1b95-43a6-9740-7b529336b142",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "# cosmosdb-emulator-secret.yaml\r\napiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  name: cosmosdb-secret\r\n  namespace: devops-model\r\ntype: Opaque\r\nstringData:\r\n  COSMOSDB_CONNECTION_STRING: \"AccountEndpoint=https://cosmosdb-emulator:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;\"",
            "yaml_body_parsed": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: cosmosdb-secret\n  namespace: devops-model\nstringData:\n  COSMOSDB_CONNECTION_STRING: AccountEndpoint=https://cosmosdb-emulator:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;\ntype: Opaque\n",
            "yaml_incluster": "0caef4b08752b209ca1f17d2d0a45f9c4d55f82a21e640a386768e040b1b3a44"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "cosmos-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/cosmosdb-emulator",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "e2e007d7ba6f4a3856443a32148ff2101d5d1ef3820d7bd0d1a8af8d315e19cd",
            "live_uid": "46a31497-a708-4402-ad7e-8c65c25481d7",
            "name": "cosmosdb-emulator",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "46a31497-a708-4402-ad7e-8c65c25481d7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "# cosmosdb-emulator-service.yaml\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: cosmosdb-emulator\r\n  namespace: devops-model\r\nspec:\r\n  type: NodePort\r\n  selector:\r\n    app: cosmosdb-emulator\r\n  ports:\r\n    - protocol: TCP\r\n      port: 8081\r\n      targetPort: 8081\r\n      nodePort: 30081   # \u003c-- You can choose a port in the range 30000–32767\r\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: cosmosdb-emulator\n  namespace: devops-model\nspec:\n  ports:\n  - nodePort: 30081\n    port: 8081\n    protocol: TCP\n    targetPort: 8081\n  selector:\n    app: cosmosdb-emulator\n  type: NodePort\n",
            "yaml_incluster": "e2e007d7ba6f4a3856443a32148ff2101d5d1ef3820d7bd0d1a8af8d315e19cd"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "namespace-model.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "a2c9501a3cd1313b255db7b07106145d3c003f84f891e9d74f400f38684d1c53",
            "live_uid": "9df2eee2-6c03-456d-b9b1-cccb2d5102a7",
            "name": "devops-model",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9df2eee2-6c03-456d-b9b1-cccb2d5102a7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Namespace\r\nmetadata:\r\n  name: devops-model\r\n  labels:\r\n    name: devops-model",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: devops-model\n  name: devops-model\n",
            "yaml_incluster": "a2c9501a3cd1313b255db7b07106145d3c003f84f891e9d74f400f38684d1c53"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "notificationmanager-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/notificationmanager",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "70e50876db2f4836b10f3c079954c3448a5d0e3a1a970ccc6174db2568fce7c6",
            "live_uid": "5b0e77f5-0ce7-4d5b-81c7-875ba86e8ecc",
            "name": "notificationmanager",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5b0e77f5-0ce7-4d5b-81c7-875ba86e8ecc",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: notificationmanager\r\n  name: notificationmanager\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: notificationmanager\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n        dapr.io/enabled: \"true\"\r\n        dapr.io/app-id: \"notificationmanager\"\r\n        dapr.io/app-port: \"8080\"\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: notificationmanager\r\n    spec:\r\n      containers:\r\n        - env:\r\n            - name: ASPNETCORE_ENVIRONMENT\r\n              value: Development\r\n            - name: ASPNETCORE_URLS\r\n              value: http://notificationmanager:8080\r\n            - name: AZURE__SignalR__ConnectionString\r\n              valueFrom:\r\n                secretKeyRef:\r\n                  name: dapr-secretstore\r\n                  key: SignalRConnectionString\r\n          image: benny902/notificationmanager:latest\r\n          name: notificationmanager\r\n          ports:\r\n            - containerPort: 8080\r\n              #hostPort: 5072\r\n              protocol: TCP\r\n          resources: {}\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: notificationmanager\n  name: notificationmanager\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: notificationmanager\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        dapr.io/app-id: notificationmanager\n        dapr.io/app-port: \"8080\"\n        dapr.io/enabled: \"true\"\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: notificationmanager\n    spec:\n      containers:\n      - env:\n        - name: ASPNETCORE_ENVIRONMENT\n          value: Development\n        - name: ASPNETCORE_URLS\n          value: http://notificationmanager:8080\n        - name: AZURE__SignalR__ConnectionString\n          valueFrom:\n            secretKeyRef:\n              key: SignalRConnectionString\n              name: dapr-secretstore\n        image: benny902/notificationmanager:latest\n        name: notificationmanager\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        resources: {}\n      restartPolicy: Always\n",
            "yaml_incluster": "70e50876db2f4836b10f3c079954c3448a5d0e3a1a970ccc6174db2568fce7c6"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "notificationmanager-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/notificationmanager",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "dae188843933f546e5ad7034afc9065d20e65b892a3a711c97f45daf72fbf009",
            "live_uid": "62c3144d-21af-45d4-a4e3-997e55390073",
            "name": "notificationmanager",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "62c3144d-21af-45d4-a4e3-997e55390073",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: notificationmanager\r\n  name: notificationmanager\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n    - name: \"5072\"\r\n      port: 5072\r\n      targetPort: 8080\r\n      nodePort: 30072  # must be between 30000–32767\r\n  selector:\r\n    io.kompose.service: notificationmanager",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: notificationmanager\n  name: notificationmanager\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"5072\"\n    nodePort: 30072\n    port: 5072\n    targetPort: 8080\n  selector:\n    io.kompose.service: notificationmanager\n  type: NodePort\n",
            "yaml_incluster": "dae188843933f546e5ad7034afc9065d20e65b892a3a711c97f45daf72fbf009"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "placement-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/placement",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "0287b97bbf386076280a5635b17512ef92087f1a319c0e19fef55e7c71a66a3b",
            "live_uid": "f8a6277b-c084-450a-8ee6-25650cf56849",
            "name": "placement",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f8a6277b-c084-450a-8ee6-25650cf56849",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: placement\r\n  name: placement\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: placement\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: placement\r\n    spec:\r\n      containers:\r\n        - args:\r\n            - ./placement\r\n            - -port\r\n            - \"50006\"\r\n            - --log-level\r\n            - debug\r\n          image: daprio/dapr:1.13.5\r\n          name: placement\r\n          ports:\r\n            - containerPort: 50006\r\n              hostPort: 50006\r\n              protocol: TCP\r\n          resources: {}\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: placement\n  name: placement\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: placement\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: placement\n    spec:\n      containers:\n      - args:\n        - ./placement\n        - -port\n        - \"50006\"\n        - --log-level\n        - debug\n        image: daprio/dapr:1.13.5\n        name: placement\n        ports:\n        - containerPort: 50006\n          hostPort: 50006\n          protocol: TCP\n        resources: {}\n      restartPolicy: Always\n",
            "yaml_incluster": "0287b97bbf386076280a5635b17512ef92087f1a319c0e19fef55e7c71a66a3b"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "placement-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/placement",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "6978ed692775c95f21b5969a9275a88c2c58b52594bb530136c1409d2b8590fc",
            "live_uid": "5c59aaea-6225-4220-84d4-88b4c89319bf",
            "name": "placement",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5c59aaea-6225-4220-84d4-88b4c89319bf",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: placement\r\n  name: placement\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  ports:\r\n    - name: \"50006\"\r\n      port: 50006\r\n      targetPort: 50006\r\n  selector:\r\n    io.kompose.service: placement",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: placement\n  name: placement\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"50006\"\n    port: 50006\n    targetPort: 50006\n  selector:\n    io.kompose.service: placement\n",
            "yaml_incluster": "6978ed692775c95f21b5969a9275a88c2c58b52594bb530136c1409d2b8590fc"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "rabbitmq-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/rabbitmq",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "3015edc047a541a1acd0b575202119967b8971e0edfdd4fcdd4fe047bdadfe72",
            "live_uid": "ce0d401e-2e3c-474c-ac8a-e0ef39c83d87",
            "name": "rabbitmq",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ce0d401e-2e3c-474c-ac8a-e0ef39c83d87",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: rabbitmq\r\n  name: rabbitmq\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: rabbitmq\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: rabbitmq\r\n    spec:\r\n      containers:\r\n        - image: rabbitmq:3-management-alpine\r\n          name: rabbitmq\r\n          ports:\r\n            - containerPort: 5672\r\n              hostPort: 5672\r\n              protocol: TCP\r\n            - containerPort: 15672\r\n              hostPort: 15672\r\n              protocol: TCP\r\n          resources: {}\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: rabbitmq\n  name: rabbitmq\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: rabbitmq\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3-management-alpine\n        name: rabbitmq\n        ports:\n        - containerPort: 5672\n          hostPort: 5672\n          protocol: TCP\n        - containerPort: 15672\n          hostPort: 15672\n          protocol: TCP\n        resources: {}\n      restartPolicy: Always\n",
            "yaml_incluster": "3015edc047a541a1acd0b575202119967b8971e0edfdd4fcdd4fe047bdadfe72"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "rabbitmq-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/rabbitmq",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "7df40f940e72cbe4283e42ebb6ae7192780116e64bcfd76a7c298bb447cad728",
            "live_uid": "93819cbe-4eea-4230-b1a1-5972138364f3",
            "name": "rabbitmq",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "93819cbe-4eea-4230-b1a1-5972138364f3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: rabbitmq\r\n  name: rabbitmq\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  ports:\r\n    - name: \"5672\"\r\n      port: 5672\r\n      targetPort: 5672\r\n    - name: \"15672\"\r\n      port: 15672\r\n      targetPort: 15672\r\n  selector:\r\n    io.kompose.service: rabbitmq",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: rabbitmq\n  name: rabbitmq\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"5672\"\n    port: 5672\n    targetPort: 5672\n  - name: \"15672\"\n    port: 15672\n    targetPort: 15672\n  selector:\n    io.kompose.service: rabbitmq\n",
            "yaml_incluster": "7df40f940e72cbe4283e42ebb6ae7192780116e64bcfd76a7c298bb447cad728"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "redis-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/redis",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "53fab33b8cabd91f85d1b647d02920a73051350f1524dbd081f56bacab9b55ac",
            "live_uid": "d5696d32-e4ca-46a9-8093-cda8be43d3a0",
            "name": "redis",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d5696d32-e4ca-46a9-8093-cda8be43d3a0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: redis\r\n  name: redis\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: redis\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: redis\r\n    spec:\r\n      containers:\r\n        - env:\r\n            - name: REDIS_REPLICATION_MODE\r\n              value: master\r\n          image: redis/redis-stack-server:latest\r\n          name: redis\r\n          ports:\r\n            - containerPort: 6379\r\n              hostPort: 6379\r\n              protocol: TCP\r\n          resources: {}\r\n      hostname: redisserver\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: redis\n  name: redis\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: redis\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: redis\n    spec:\n      containers:\n      - env:\n        - name: REDIS_REPLICATION_MODE\n          value: master\n        image: redis/redis-stack-server:latest\n        name: redis\n        ports:\n        - containerPort: 6379\n          hostPort: 6379\n          protocol: TCP\n        resources: {}\n      hostname: redisserver\n      restartPolicy: Always\n",
            "yaml_incluster": "53fab33b8cabd91f85d1b647d02920a73051350f1524dbd081f56bacab9b55ac"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "redis-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/redis",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "52e67af12220ab4b3f6ece1453bfe9a8c1f85f60f74560c1758f7cd4085c929c",
            "live_uid": "d36e7675-8542-4ada-9993-89c981149ec9",
            "name": "redis",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d36e7675-8542-4ada-9993-89c981149ec9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: redis\r\n  name: redis\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  ports:\r\n    - name: \"6379\"\r\n      port: 6379\r\n      targetPort: 6379\r\n  selector:\r\n    io.kompose.service: redis",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: redis\n  name: redis\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"6379\"\n    port: 6379\n    targetPort: 6379\n  selector:\n    io.kompose.service: redis\n",
            "yaml_incluster": "52e67af12220ab4b3f6ece1453bfe9a8c1f85f60f74560c1758f7cd4085c929c"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "signalr-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/signalr",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "18779e1be2ce707263ad52e4c8fa1c8ecaaad89a9386048c4f5dffe0048b93f0",
            "live_uid": "5244e8fb-3dcd-4bfe-a624-76883271761f",
            "name": "signalr",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5244e8fb-3dcd-4bfe-a624-76883271761f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: signalr\r\n  name: signalr\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: signalr\r\n  strategy:\r\n    type: Recreate\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-default: \"true\"\r\n        io.kompose.service: signalr\r\n    spec:\r\n      containers:\r\n        - env:\r\n            - name: ASPNETCORE_ENVIRONMENT\r\n              value: Development\r\n            - name: ASPNETCORE_URLS\r\n              value: http://+:8888;http://+:7071\r\n            - name: ASRS_EMULATOR_PORT\r\n              value: \"8888\"\r\n          image: benny902/signalremulator\r\n          name: signalr\r\n          ports:\r\n            - containerPort: 8888\r\n              hostPort: 8888\r\n              protocol: TCP\r\n            - containerPort: 7071\r\n              hostPort: 7071\r\n              protocol: TCP\r\n          resources: {}\r\n      restartPolicy: Always",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: signalr\n  name: signalr\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: signalr\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      annotations:\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-default: \"true\"\n        io.kompose.service: signalr\n    spec:\n      containers:\n      - env:\n        - name: ASPNETCORE_ENVIRONMENT\n          value: Development\n        - name: ASPNETCORE_URLS\n          value: http://+:8888;http://+:7071\n        - name: ASRS_EMULATOR_PORT\n          value: \"8888\"\n        image: benny902/signalremulator\n        name: signalr\n        ports:\n        - containerPort: 8888\n          hostPort: 8888\n          protocol: TCP\n        - containerPort: 7071\n          hostPort: 7071\n          protocol: TCP\n        resources: {}\n      restartPolicy: Always\n",
            "yaml_incluster": "18779e1be2ce707263ad52e4c8fa1c8ecaaad89a9386048c4f5dffe0048b93f0"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "signalr-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/signalr",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "f97be8b7954326d36f0dbeb996d9813bb2a501dfdc387213391c77005739395a",
            "live_uid": "8071926e-173e-4a12-a5e4-3f1a2d2db017",
            "name": "signalr",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8071926e-173e-4a12-a5e4-3f1a2d2db017",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: signalr\r\n  name: signalr\r\n  namespace: devops-model\r\n  ##namespace: default\r\nspec:\r\n  ports:\r\n    - name: \"8888\"\r\n      port: 8888\r\n      targetPort: 8888\r\n    - name: \"7071\"\r\n      port: 7071\r\n      targetPort: 7071\r\n  selector:\r\n    io.kompose.service: signalr",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: signalr\n  name: signalr\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"8888\"\n    port: 8888\n    targetPort: 8888\n  - name: \"7071\"\n    port: 7071\n    targetPort: 7071\n  selector:\n    io.kompose.service: signalr\n",
            "yaml_incluster": "f97be8b7954326d36f0dbeb996d9813bb2a501dfdc387213391c77005739395a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todoaccessor-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/todoaccessor",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "80c41ee3e62667a7062acb2bf58d450f269308c54e872883b6f69611c1990260",
            "live_uid": "0755dc4c-b46d-4ce6-bc89-980df4c7825a",
            "name": "todoaccessor",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0755dc4c-b46d-4ce6-bc89-980df4c7825a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: todoaccessor\r\n  name: todoaccessor\r\n  namespace: devops-model\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: todoaccessor\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n        dapr.io/enabled: \"true\"\r\n        dapr.io/app-id: \"todoaccessor\"\r\n        dapr.io/app-port: \"8080\"\r\n        dapr.io/config: \"dapr-config\"\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: todoaccessor\r\n    spec:\r\n      containers:\r\n        - env:\r\n            - name: ASPNETCORE_ENVIRONMENT\r\n              value: Development\r\n            - name: ASPNETCORE_URLS\r\n              value: http://+:8080\r\n            - name: TodoCosmosDbSettings__ConnectionString\r\n              valueFrom:\r\n                secretKeyRef:\r\n                  name: cosmosdb-connection\r\n                  key: CosmosDbConnectionString\r\n            - name: TodoCosmosDbSettings__DatabaseName\r\n              value: ToDoDatabase\r\n            - name: TodoCosmosDbSettings__ContainerName\r\n              value: ToDos\r\n            - name: AZURE_COSMOS_EMULATOR_SKIP_CERT_VALIDATION\r\n              value: \"true\"\r\n          image: benny902/todoaccessor\r\n          name: todoaccessor\r\n          ports:\r\n            - containerPort: 8080\r\n              protocol: TCP\r\n          resources: {}\r\n          volumeMounts:\r\n            - name: cosmosdbemulator-crt\r\n              mountPath: /certs/cosmosdbemulator.crt\r\n              subPath: cosmosdbemulator.crt\r\n      restartPolicy: Always\r\n      volumes:\r\n        - name: cosmosdbemulator-crt\r\n          secret:\r\n            secretName: cosmosdb-cert\r\n            items:\r\n              - key: cosmosdbemulator.crt\r\n                path: cosmosdbemulator.crt",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: todoaccessor\n  name: todoaccessor\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: todoaccessor\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        dapr.io/app-id: todoaccessor\n        dapr.io/app-port: \"8080\"\n        dapr.io/config: dapr-config\n        dapr.io/enabled: \"true\"\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: todoaccessor\n    spec:\n      containers:\n      - env:\n        - name: ASPNETCORE_ENVIRONMENT\n          value: Development\n        - name: ASPNETCORE_URLS\n          value: http://+:8080\n        - name: TodoCosmosDbSettings__ConnectionString\n          valueFrom:\n            secretKeyRef:\n              key: CosmosDbConnectionString\n              name: cosmosdb-connection\n        - name: TodoCosmosDbSettings__DatabaseName\n          value: ToDoDatabase\n        - name: TodoCosmosDbSettings__ContainerName\n          value: ToDos\n        - name: AZURE_COSMOS_EMULATOR_SKIP_CERT_VALIDATION\n          value: \"true\"\n        image: benny902/todoaccessor\n        name: todoaccessor\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        resources: {}\n        volumeMounts:\n        - mountPath: /certs/cosmosdbemulator.crt\n          name: cosmosdbemulator-crt\n          subPath: cosmosdbemulator.crt\n      restartPolicy: Always\n      volumes:\n      - name: cosmosdbemulator-crt\n        secret:\n          items:\n          - key: cosmosdbemulator.crt\n            path: cosmosdbemulator.crt\n          secretName: cosmosdb-cert\n",
            "yaml_incluster": "80c41ee3e62667a7062acb2bf58d450f269308c54e872883b6f69611c1990260"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todoaccessor-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/todoaccessor",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "ed84452d370c49afa4db4204629a12a55c93dcf6df23dda6d872ec960433638a",
            "live_uid": "6da1769d-67d1-449c-80f8-129c865aa460",
            "name": "todoaccessor",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6da1769d-67d1-449c-80f8-129c865aa460",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: todoaccessor\r\n  name: todoaccessor\r\n  namespace: devops-model\r\n  #namespace: default\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n    - name: \"5075\"\r\n      port: 5075\r\n      targetPort: 8080\r\n      nodePort: 30075  # must be between 30000–32767\r\n  selector:\r\n    io.kompose.service: todoaccessor\r\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: todoaccessor\n  name: todoaccessor\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"5075\"\n    nodePort: 30075\n    port: 5075\n    targetPort: 8080\n  selector:\n    io.kompose.service: todoaccessor\n  type: NodePort\n",
            "yaml_incluster": "ed84452d370c49afa4db4204629a12a55c93dcf6df23dda6d872ec960433638a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todomanager-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/todomanager",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "ecbc2ad0f5b915fb869ea9ff08f2bd4f03d7abad37dfd81b0b50be62497f8550",
            "live_uid": "6e6377bb-5443-407e-b23d-105e09d1cede",
            "name": "todomanager",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6e6377bb-5443-407e-b23d-105e09d1cede",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: todomanager\r\n  namespace: devops-model\r\n  labels:\r\n    io.kompose.service: todomanager\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: todomanager\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        dapr.io/enabled: \"true\"\r\n        dapr.io/app-id: \"todomanager\"\r\n        dapr.io/app-port: \"8080\"\r\n        dapr.io/config: \"dapr-config\"\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: todomanager\r\n    spec:\r\n      containers:\r\n        - name: todomanager\r\n          image: benny902/todomanager\r\n          ports:\r\n            - containerPort: 8080\r\n          env:\r\n            - name: ASPNETCORE_ENVIRONMENT\r\n              value: Development\r\n            - name: ASPNETCORE_URLS\r\n              value: http://todomanager:8080\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  labels:\n    io.kompose.service: todomanager\n  name: todomanager\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: todomanager\n  template:\n    metadata:\n      annotations:\n        dapr.io/app-id: todomanager\n        dapr.io/app-port: \"8080\"\n        dapr.io/config: dapr-config\n        dapr.io/enabled: \"true\"\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: todomanager\n    spec:\n      containers:\n      - env:\n        - name: ASPNETCORE_ENVIRONMENT\n          value: Development\n        - name: ASPNETCORE_URLS\n          value: http://todomanager:8080\n        image: benny902/todomanager\n        name: todomanager\n        ports:\n        - containerPort: 8080\n      restartPolicy: Always\n",
            "yaml_incluster": "ecbc2ad0f5b915fb869ea9ff08f2bd4f03d7abad37dfd81b0b50be62497f8550"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todomanager-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/todomanager",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "2d224dacda683f870b62ff091e047b1cf5c3449966c95e541b1ca465af2f4ebc",
            "live_uid": "04697846-699a-44ef-9e4c-8962bc0f8d3d",
            "name": "todomanager",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "04697846-699a-44ef-9e4c-8962bc0f8d3d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: todomanager\r\n  name: todomanager\r\n  namespace: devops-model\r\n  #namespace: default\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n    - name: \"5073\"\r\n      port: 5073\r\n      targetPort: 8080\r\n      nodePort: 30073  # must be between 30000–32767\r\n  selector:\r\n    io.kompose.service: todomanager\r\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: todomanager\n  name: todomanager\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"5073\"\n    nodePort: 30073\n    port: 5073\n    targetPort: 8080\n  selector:\n    io.kompose.service: todomanager\n  type: NodePort\n",
            "yaml_incluster": "2d224dacda683f870b62ff091e047b1cf5c3449966c95e541b1ca465af2f4ebc"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "zipkin-deployment.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/devops-model/deployments/zipkin",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "65a0559c95140d37657997d2263fe1ad453bea896e63f769f5baa743abf85797",
            "live_uid": "dce40489-b626-4f4b-aeff-9bd7a1f498b0",
            "name": "zipkin",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "dce40489-b626-4f4b-aeff-9bd7a1f498b0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: zipkin\r\n  name: zipkin\r\n  namespace: devops-model\r\n  #namespace: default\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      io.kompose.service: zipkin\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      annotations:\r\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n        kompose.version: 1.30.0 (9d8dcb518)\r\n      creationTimestamp: null\r\n      labels:\r\n        io.kompose.network/democuest-democuest-dapr: \"true\"\r\n        io.kompose.service: zipkin\r\n    spec:\r\n      containers:\r\n        - image: openzipkin/zipkin\r\n          name: zipkin\r\n          ports:\r\n            - containerPort: 9411\r\n              hostPort: 9411\r\n              protocol: TCP\r\n          resources: {}\r\n      restartPolicy: Always\r\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: zipkin\n  name: zipkin\n  namespace: devops-model\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      io.kompose.service: zipkin\n  strategy: {}\n  template:\n    metadata:\n      annotations:\n        kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n        kompose.version: 1.30.0 (9d8dcb518)\n      creationTimestamp: null\n      labels:\n        io.kompose.network/democuest-democuest-dapr: \"true\"\n        io.kompose.service: zipkin\n    spec:\n      containers:\n      - image: openzipkin/zipkin\n        name: zipkin\n        ports:\n        - containerPort: 9411\n          hostPort: 9411\n          protocol: TCP\n        resources: {}\n      restartPolicy: Always\n",
            "yaml_incluster": "65a0559c95140d37657997d2263fe1ad453bea896e63f769f5baa743abf85797"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "zipkin-service.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model/services/zipkin",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "0c0aad7b223a7861deb89a356c0b5d63a08429684c23f8fa565350ddf81bb1e5",
            "live_uid": "c902ba0c-4f7b-420a-a001-020e0c85218f",
            "name": "zipkin",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c902ba0c-4f7b-420a-a001-020e0c85218f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\r\n    kompose.version: 1.30.0 (9d8dcb518)\r\n  creationTimestamp: null\r\n  labels:\r\n    io.kompose.service: zipkin\r\n  name: zipkin\r\n  namespace: devops-model\r\n  #namespace: default\r\nspec:\r\n  ports:\r\n    - name: \"9411\"\r\n      port: 9411\r\n      targetPort: 9411\r\n  selector:\r\n    io.kompose.service: zipkin\r\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: C:\\Program Files\\kompose\\kompose.exe convert -f docker-compose.yml\n    kompose.version: 1.30.0 (9d8dcb518)\n  creationTimestamp: null\n  labels:\n    io.kompose.service: zipkin\n  name: zipkin\n  namespace: devops-model\nspec:\n  ports:\n  - name: \"9411\"\n    port: 9411\n    targetPort: 9411\n  selector:\n    io.kompose.service: zipkin\n",
            "yaml_incluster": "0c0aad7b223a7861deb89a356c0b5d63a08429684c23f8fa565350ddf81bb1e5"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_components",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "dapr_components",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "bankaccountqueue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/bankaccountqueue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "e7325195a503e8ce42a99b1383f2dc97b14de0dae5fef3d6db1ae7e8a6233c17",
            "live_uid": "736270f9-ea71-47ef-9e5e-b8628445e942",
            "name": "bankaccountqueue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "736270f9-ea71-47ef-9e5e-b8628445e942",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: bankaccountqueue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: bankaccountqueue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\"\r\n  - name: durable\r\n    value: false\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 10\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"text/plain\"\r\nscopes:\r\n  - transactionmanager\r\n  - bankaccountaccessor",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: bankaccountqueue\n  namespace: devops-model\nscopes:\n- transactionmanager\n- bankaccountaccessor\nspec:\n  metadata:\n  - name: queueName\n    value: bankaccountqueue\n  - name: host\n    value: amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\n  - name: durable\n    value: false\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 10\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: text/plain\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "e7325195a503e8ce42a99b1383f2dc97b14de0dae5fef3d6db1ae7e8a6233c17"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "clientcallback.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/clientcallback",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "af920f48c3864d0b1a2b30543f77071ace1acfdda2da44408f3fa98828bdcf8d",
            "live_uid": "48f1c390-89a8-42cf-96fb-d709285db5a7",
            "name": "clientcallback",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "48f1c390-89a8-42cf-96fb-d709285db5a7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: clientcallback\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.azure.signalr\r\n  version: v1\r\n  metadata:\r\n    - name: connectionString\r\n      secretKeyRef:\r\n        name: dapr-secretstore\r\n        key: SignalRConnectionString\r\n    - name: hub \r\n      value: todohub\r\n  secretStore: secretstore\r\nscopes:\r\n  - notificationmanager\r\n",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: clientcallback\n  namespace: devops-model\nscopes:\n- notificationmanager\nspec:\n  metadata:\n  - name: connectionString\n    secretKeyRef:\n      key: SignalRConnectionString\n      name: dapr-secretstore\n  - name: hub\n    value: todohub\n  secretStore: secretstore\n  type: bindings.azure.signalr\n  version: v1\n",
            "yaml_incluster": "af920f48c3864d0b1a2b30543f77071ace1acfdda2da44408f3fa98828bdcf8d"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "clientresponsequeue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/clientresponsequeue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "02a5dad8f62966f34616363fdf107e5f5f9da192f49a376c7c7769f2ed3073cb",
            "live_uid": "558d337e-d85a-45dd-8669-5606817ce249",
            "name": "clientresponsequeue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "558d337e-d85a-45dd-8669-5606817ce249",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: clientresponsequeue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: clientresponsequeue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\"\r\n  - name: durable\r\n    value: false\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 10\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"application/json\"\r\nscopes:\r\n  - notificationmanager\r\n  - todomanager",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: clientresponsequeue\n  namespace: devops-model\nscopes:\n- notificationmanager\n- todomanager\nspec:\n  metadata:\n  - name: queueName\n    value: clientresponsequeue\n  - name: host\n    value: amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\n  - name: durable\n    value: false\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 10\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: application/json\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "02a5dad8f62966f34616363fdf107e5f5f9da192f49a376c7c7769f2ed3073cb"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "secretstore.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/secretstore",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "818f8656b223dbc80d38f81e4e9ce8aff374d02dbb0a8de831955798c2f26961",
            "live_uid": "a9d2dc76-259b-49ad-8a6c-3e6b2ab4329b",
            "name": "secretstore",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a9d2dc76-259b-49ad-8a6c-3e6b2ab4329b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: secretstore\r\n  namespace: devops-model\r\nspec:\r\n  type: secretstores.kubernetes\r\n  version: v1\r\n  metadata: []\r\n",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: secretstore\n  namespace: devops-model\nspec:\n  metadata: []\n  type: secretstores.kubernetes\n  version: v1\n",
            "yaml_incluster": "818f8656b223dbc80d38f81e4e9ce8aff374d02dbb0a8de831955798c2f26961"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "statestore.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/statestore",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "545707c5e9ffbce040acd53e03c90f4179e6e85fe9d9ff9a702aadbebb1fe139",
            "live_uid": "3fda0490-d3b1-4a56-92cf-896514fd9d2c",
            "name": "statestore",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3fda0490-d3b1-4a56-92cf-896514fd9d2c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: statestore\r\n  namespace: devops-model\r\nspec:\r\n  type: state.redis\r\n  version: v1\r\n  metadata:\r\n  - name: redisHost\r\n    value: redis:6379\r\n  - name: redisPassword\r\n    value: \"\"\r\n  - name: actorStateStore\r\n    value: \"true\"\r\n  # - name: queryIndexes\r\n  #   value: |\r\n  #     [\r\n  #       {\r\n  #         \"name\": \"customerNameIndex\",\r\n  #         \"indexes\": [\r\n  #           {\r\n  #             \"key\": \"customerName\",\r\n  #             \"type\": \"TEXT\"\r\n  #           }\r\n  #         ]\r\n  #       }\r\n  #     ]",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: statestore\n  namespace: devops-model\nspec:\n  metadata:\n  - name: redisHost\n    value: redis:6379\n  - name: redisPassword\n    value: \"\"\n  - name: actorStateStore\n    value: \"true\"\n  type: state.redis\n  version: v1\n",
            "yaml_incluster": "545707c5e9ffbce040acd53e03c90f4179e6e85fe9d9ff9a702aadbebb1fe139"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todomanagercallbackqueue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/todomanagercallbackqueue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "fd79ef505f9d766e0adc3a504764611bf81dfcec33e2a3b5142a3700bd077153",
            "live_uid": "68eedccd-37e9-482b-bdf0-0ca9118782c5",
            "name": "todomanagercallbackqueue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "68eedccd-37e9-482b-bdf0-0ca9118782c5",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: todomanagercallbackqueue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: todomanagercallbackqueue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\"\r\n  - name: durable\r\n    value: false\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 10\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"application/json\"\r\nscopes:\r\n  - todoaccessor\r\n  - todomanager",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: todomanagercallbackqueue\n  namespace: devops-model\nscopes:\n- todoaccessor\n- todomanager\nspec:\n  metadata:\n  - name: queueName\n    value: todomanagercallbackqueue\n  - name: host\n    value: amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\n  - name: durable\n    value: false\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 10\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: application/json\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "fd79ef505f9d766e0adc3a504764611bf81dfcec33e2a3b5142a3700bd077153"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "todoqueue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/todoqueue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "b598e61f770a7e1ada4d538726bf6d09cd07e41b5631bec3799805a626f6d4fd",
            "live_uid": "bb75728c-6b8c-4356-8fe8-13551a4556da",
            "name": "todoqueue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "bb75728c-6b8c-4356-8fe8-13551a4556da",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: todoqueue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: todoqueue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\"\r\n  - name: durable\r\n    value: false\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 10\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"text/plain\"\r\nscopes:\r\n  - todomanager\r\n  - todoaccessor",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: todoqueue\n  namespace: devops-model\nscopes:\n- todomanager\n- todoaccessor\nspec:\n  metadata:\n  - name: queueName\n    value: todoqueue\n  - name: host\n    value: amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\n  - name: durable\n    value: false\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 10\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: text/plain\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "b598e61f770a7e1ada4d538726bf6d09cd07e41b5631bec3799805a626f6d4fd"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "transactionresponsequeue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/transactionresponsequeue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "0c101444f2b1ba47ed9d81a6eb7854add2af418c6b8cf77454d42f12ae41be4e",
            "live_uid": "d4eeb454-767e-4517-b70e-ed83ffa5dfe3",
            "name": "transactionresponsequeue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d4eeb454-767e-4517-b70e-ed83ffa5dfe3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: transactionresponsequeue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: transactionresponsequeue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672\"\r\n  - name: durable\r\n    value: true\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 60\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"text/plain\"",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: transactionresponsequeue\n  namespace: devops-model\nspec:\n  metadata:\n  - name: queueName\n    value: transactionresponsequeue\n  - name: host\n    value: amqp://rabbitmq:5672\n  - name: durable\n    value: true\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 60\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: text/plain\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "0c101444f2b1ba47ed9d81a6eb7854add2af418c6b8cf77454d42f12ae41be4e"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        },
        {
          "index_key": "useraccountqueue.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/components/useraccountqueue",
            "ignore_fields": null,
            "kind": "Component",
            "live_manifest_incluster": "80222845e063b80ceddad2cb7d6bf951bec82e14ef82c090fcbe5bd15afaf9a6",
            "live_uid": "c4b29cc8-e695-4539-94cc-fee137e6b5d7",
            "name": "useraccountqueue",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c4b29cc8-e695-4539-94cc-fee137e6b5d7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Component\r\nmetadata:\r\n  name: useraccountqueue\r\n  namespace: devops-model\r\nspec:\r\n  type: bindings.rabbitmq\r\n  version: v1\r\n  metadata:\r\n  - name: queueName\r\n    value: useraccountqueue\r\n  - name: host\r\n    value: \"amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\"\r\n  - name: durable\r\n    value: false\r\n  - name: deleteWhenUnused\r\n    value: false\r\n  - name: ttlInSeconds\r\n    value: 10\r\n  - name: prefetchCount\r\n    value: 0\r\n  - name: exclusive\r\n    value: false\r\n  - name: maxPriority\r\n    value: 5\r\n  - name: contentType\r\n    value: \"text/plain\"\r\nscopes:\r\n  - transactionmanager\r\n  - useraccountaccessor",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Component\nmetadata:\n  name: useraccountqueue\n  namespace: devops-model\nscopes:\n- transactionmanager\n- useraccountaccessor\nspec:\n  metadata:\n  - name: queueName\n    value: useraccountqueue\n  - name: host\n    value: amqp://rabbitmq:5672?connection_attempts=10\u0026retry_delay=10\n  - name: durable\n    value: false\n  - name: deleteWhenUnused\n    value: false\n  - name: ttlInSeconds\n    value: 10\n  - name: prefetchCount\n    value: 0\n  - name: exclusive\n    value: false\n  - name: maxPriority\n    value: 5\n  - name: contentType\n    value: text/plain\n  type: bindings.rabbitmq\n  version: v1\n",
            "yaml_incluster": "80222845e063b80ceddad2cb7d6bf951bec82e14ef82c090fcbe5bd15afaf9a6"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_config",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "dapr_config",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "dapr.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/dapr.io/v1alpha1/namespaces/devops-model/configurations/dapr-config",
            "ignore_fields": null,
            "kind": "Configuration",
            "live_manifest_incluster": "418c023fdc194f3368e99f3d66a72399eb943bb1e67a8391b69a9a238369f838",
            "live_uid": "a71405d4-8f35-4ef6-aecb-9736d7aa696e",
            "name": "dapr-config",
            "namespace": "devops-model",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a71405d4-8f35-4ef6-aecb-9736d7aa696e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: dapr.io/v1alpha1\r\nkind: Configuration\r\nmetadata:\r\n  name: dapr-config\r\n  namespace: devops-model\r\nspec:\r\n  mtls:\r\n    enabled: false\r\n    controlPlaneTrustDomain: \"localhost\"\r\n    sentryAddress: \"localhost:50001\"\r\n  tracing:\r\n    samplingRate: \"1\"\r\n    zipkin:\r\n      endpointAddress: http://zipkin:9411/api/v2/spans\r\n",
            "yaml_body_parsed": "apiVersion: dapr.io/v1alpha1\nkind: Configuration\nmetadata:\n  name: dapr-config\n  namespace: devops-model\nspec:\n  mtls:\n    controlPlaneTrustDomain: localhost\n    enabled: false\n    sentryAddress: localhost:50001\n  tracing:\n    samplingRate: \"1\"\n    zipkin:\n      endpointAddress: http://zipkin:9411/api/v2/spans\n",
            "yaml_incluster": "418c023fdc194f3368e99f3d66a72399eb943bb1e67a8391b69a9a238369f838"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_system_ns",
            "kubectl_manifest.namespace",
            "kubernetes_namespace.devops_model",
            "kubernetes_secret.cosmosdb_cert",
            "kubernetes_secret.cosmosdb_connection",
            "kubernetes_secret.signalr_connection",
            "null_resource.wait_for_dapr_control_plane"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "dapr_system_ns",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/dapr-system",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "e06eb72eb5080d5a059c6e88a89ec7e04595b70943b8ee55e846003b2ff3b1fe",
            "live_uid": "7d368eee-cb01-4142-aeaa-980d429fbddb",
            "name": "dapr-system",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7d368eee-cb01-4142-aeaa-980d429fbddb",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Namespace\r\nmetadata:\r\n  name: dapr-system\r\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: dapr-system\n",
            "yaml_incluster": "e06eb72eb5080d5a059c6e88a89ec7e04595b70943b8ee55e846003b2ff3b1fe"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "namespace",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/devops-model",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "a2c9501a3cd1313b255db7b07106145d3c003f84f891e9d74f400f38684d1c53",
            "live_uid": "9df2eee2-6c03-456d-b9b1-cccb2d5102a7",
            "name": "devops-model",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9df2eee2-6c03-456d-b9b1-cccb2d5102a7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\r\nkind: Namespace\r\nmetadata:\r\n  name: devops-model\r\n  labels:\r\n    name: devops-model",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: devops-model\n  name: devops-model\n",
            "yaml_incluster": "a2c9501a3cd1313b255db7b07106145d3c003f84f891e9d74f400f38684d1c53"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.devops_model"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "devops_model",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "devops-model",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "devops-model",
                "resource_version": "419",
                "uid": "9df2eee2-6c03-456d-b9b1-cccb2d5102a7"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "devops-model"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "cosmosdb_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "binary_data_wo": null,
            "binary_data_wo_revision": null,
            "data": {
              "cosmosdbemulator.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEZHpDQ0FsK2dBd0lCQWdJUUp6RFZQajBUOVlWTTRYZDl6RzRWL1RBTkJna3Foa2lHOXcwQkFRVUZBREFVDQpNUkl3RUFZRFZRUURFd2xzYjJOaGJHaHZjM1F3SGhjTk1qVXdOekl3TVRBd05ETXhXaGNOTXpBd056SXdNVEF3DQpORE14V2pBVU1SSXdFQVlEVlFRREV3bHNiMk5oYkdodmMzUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCDQpEd0F3Z2dFS0FvSUJBUUMxK3RURDEySkh2dXhDcTdCN1NDR2tZVlVtRGVOYXBLWUVMbGsvNW5POVIrYmU5bXRnDQpJNlV0MnloS0h5MXZlSnRTSmxramF1cHlIa3ZUclhKaEhHUE8xR1EvZm1DNkRLMnZ2eHNFSEQvbklHZUxMZEdQDQoxOC92ZCtGQ3VHQmZ3NkVGY0o5THJ6bGlmS0xndGxURFBySGpQZjlRTTdNS1hFbEtUcnR4bnREOTFjY0FmYmNJDQpUK0sxWURmVFVIWEhiUWlYVUNESGh1dTBUbE9lelhjYVQ5MVFsVXd4Ny8vckNBR2lCV1gxakZDWmNSMUNZcitVDQpGSElzdmQvYTV6SU9ZelZEWHZCRjJXVHdFQkM0WGRmOEx6dVZqUXlVQ3QvNE5SckoxUUt6cWdWR2U3VGlQNFZkDQpQUUV3WDJlS1EwY0RlYVNISDBVNkVmQ1VrblVCTHlITTgybTFBZ01CQUFHamdjUXdnY0V3Z2E0R0ExVWRFUUVCDQovd1NCb3pDQm9JSXBZMjl6Ylc5elpHSXRaVzExYkdGMGIzSXROelEwTmpVNU9EbG1ZeTAyYUdkNE1pNUVUMDFCDQpTVTZDQ1d4dlkyRnNhRzl6ZEljRUNnRUNJb2NFZndBQUFZY0VDZ0VDSW9jRUNnRUNJb2NFQ2dFQ0lvSUpNVEF1DQpNUzR5TGpNMGdna3hNamN1TUM0d0xqR0NDVEV3TGpFdU1pNHpOSUlKTVRBdU1TNHlMak0wZ2g1amIzTnRiM05rDQpZbVZ0ZFd4aGRHOXliWFJzY3k1c2IyTmhiR2h2YzNRd0RnWURWUjBQQVFIL0JBUURBZ0trTUEwR0NTcUdTSWIzDQpEUUVCQlFVQUE0SUJBUUJaYUUxaXdlb1U3RFp2NVdMUWU5YnQ3Vk1sdGx6Zk5PYmZwS1E5UDRrVHMremJ6T2VxDQphYmgzbi9PYmdnVWI1Y1prQnFXSVgzNHhpMjQ0OUxNNHVTeGlWQm5JVGxrNk9zZmxmZitaVUhGQ3pydGFGY3FyDQp6alkwc20rZWl4RDJkZW1KOHMxTDVHOHA0a1V4NGw5YzR1QWJvcll0eW55UzhkeU9oR1RNVUhKME04REx0UDhkDQpwcm9WZVV6ZHYvYlFHbGR1SDRTQWlkQkN6ZXpvSFJVci9ndTdJUE5ZSWJodkIrV1QxTkdQS2gwMnl4akJnSTk1DQpRR2hVejB1T0w2UE54ZVJxdVlEU1NZMDFnUjVnWXdUQ1ljYitWTFdlamRiVFEvN0xUOTBlSnJBWEZ6TXBjNjgzDQpNMHRqWFVrbHI3eHh5YTM5aDZRZzJMV1poanNvWjBVSG1nMFENCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
            },
            "data_wo": null,
            "data_wo_revision": null,
            "id": "devops-model/cosmosdb-cert",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "cosmosdb-cert",
                "namespace": "devops-model",
                "resource_version": "424",
                "uid": "6c6688bf-f8d1-40b7-8b06-6efe109cfe03"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Secret",
            "name": "cosmosdb-cert",
            "namespace": "devops-model"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.devops_model"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "cosmosdb_connection",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "binary_data_wo": null,
            "binary_data_wo_revision": null,
            "data": {
              "CosmosDbConnectionString": "AccountEndpoint=https://cosmosdb-emulator:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;"
            },
            "data_wo": null,
            "data_wo_revision": null,
            "id": "devops-model/cosmosdb-connection",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "cosmosdb-connection",
                "namespace": "devops-model",
                "resource_version": "423",
                "uid": "72ed09e4-0fcb-4d67-a540-f7e52b947cfc"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Secret",
            "name": "cosmosdb-connection",
            "namespace": "devops-model"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.devops_model"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "signalr_connection",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "binary_data_wo": null,
            "binary_data_wo_revision": null,
            "data": {
              "SignalRConnectionString": "Endpoint=http://host.docker.internal:8888;Port=8888;AccessKey=ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGH;Version=1.0;"
            },
            "data_wo": null,
            "data_wo_revision": null,
            "id": "devops-model/dapr-secretstore",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "dapr-secretstore",
                "namespace": "devops-model",
                "resource_version": "422",
                "uid": "be1892cf-5645-42ec-9734-d18872dd8406"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Secret",
            "name": "dapr-secretstore",
            "namespace": "devops-model"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.devops_model"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_dapr_control_plane",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1003950043011527798",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.dapr",
            "kubectl_manifest.dapr_system_ns"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
