apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: D:\Tool\kompose.exe convert -f .\docker-compose.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: manager
  name: manager
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: manager
  template:
    metadata:
      annotations:
        dapr.io/enabled: "true" # Enable Dapr for this pod
        dapr.io/app-id: "manager" # Dapr application ID
        dapr.io/app-port: "5001"  # Dapr app port
        kompose.cmd: D:\Tool\kompose.exe convert -f .\docker-compose.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: manager
    spec:
      initContainers:
        - name: wait-for-accessor
          image: curlimages/curl:8.5.0
          command:
            - sh
            - -c
            - |
              until curl -s -o /dev/null -w "%{http_code}" http://accessor-service:80/task/1 | grep -E '^(200|404)$'; do
                echo "Waiting for accessor...";
                sleep 2;
              done
        - name: wait-for-engine
          image: curlimages/curl:8.5.0
          command:
            - sh
            - -c
            - |
              until curl -s -o /dev/null -w "%{http_code}" -X POST -H "Content-Type: application/json" -d '{"UserMessage":"ping"}' http://engine:5002/chat | grep -q "200"; do
                echo "Waiting for engine...";
                sleep 2;
              done
      containers:
        - env:
            - name: ASPNETCORE_URLS
              value: http://+:5001
            - name: ServiceBus__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: azure-service-bus-secret
                  key: AzureServiceBusConnectionString

          image: ${DOCKER_REGISTRY}/manager:latest
          name: manager
          ports:
            - containerPort: 5001
              protocol: TCP
      restartPolicy: Always